{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyO2uP01c6lvv+U6EAECBip0"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dWkzAUZoUHI2","executionInfo":{"status":"ok","timestamp":1761083728999,"user_tz":300,"elapsed":14625,"user":{"displayName":"Ernesto Quispe Calderón","userId":"16288532978158492958"}},"outputId":"8112c47b-c71e-4f95-92b6-09b2516ea5c0"},"outputs":[{"output_type":"stream","name":"stdout","text":["Ingrese la cantidad de ventas del primer producto: 12\n","Ingrese la cantidad de ventas del segundo producto: a\n","Por favor, ingrese un valor numérico válido.\n","Ingrese la cantidad de ventas del segundo producto: s\n","Por favor, ingrese un valor numérico válido.\n","Ingrese la cantidad de ventas del segundo producto: d\n","Por favor, ingrese un valor numérico válido.\n","Ingrese la cantidad de ventas del segundo producto: 10\n","Se vendio mas Manzanas.\n"]}],"source":["# EJERCICIO 1\n","# Crea un programa que reciba el número de ventas de los dos productos y muestre un mensaje indicando cuál de ellos vendió más. Si las cantidades son iguales, muestra un mensaje diciendo\n","# que hubo un empate.\n","\n","# Pedimos valor de Manzanas\n","while True:\n","    try:\n","      v_manzanas = int(input(\"Ingrese la cantidad de ventas del primer producto: \"))\n","      break # Si el dato es valido sale del bucle\n","    except ValueError:\n","      print(\"Por favor, ingrese un valor numérico válido.\")\n","\n","# Pedimos valor de Platanos\n","while True:\n","    try:\n","      v_platanos = int(input(\"Ingrese la cantidad de ventas del segundo producto: \"))\n","      break # Si el dato es valido sale del bucle\n","    except ValueError:\n","      print(\"Por favor, ingrese un valor numérico válido.\")\n","\n","if v_manzanas > v_platanos:\n","  print(\"Se vendio mas Manzanas.\")\n","elif v_platanos > v_manzanas:\n","  print(\"Se vendio mas platanos.\")\n","else:\n","  print(\"Hubo un empate entre los productos.\")\n"]},{"cell_type":"markdown","source":["###  Versión mas profesional del Codigo"],"metadata":{"id":"SMGKsvCxntVd"}},{"cell_type":"code","source":["def producto_mas_vendido(ventas: dict) -> str:\n","    \"\"\"\n","    Recibe un diccionario con el nombre del producto como clave y las ventas como valor.\n","    Devuelve un mensaje indicando cuál vendió más o si hubo empate.\n","    \"\"\"\n","    if not ventas:\n","        return \"No hay datos de ventas.\"\n","\n","    max_ventas = max(ventas.values())\n","    ganadores = [p for p, v in ventas.items() if v == max_ventas]\n","\n","    if len(ganadores) == 1:\n","        return f\"El producto más vendido fue: {ganadores[0]} ({max_ventas} unidades)\"\n","    else:\n","        return f\"Hubo un empate entre: {', '.join(ganadores)} con {max_ventas} unidades cada uno\"\n","\n","\n","def get_positive_int(prompt: str) -> int:\n","    \"\"\"Solicita un número entero positivo al usuario.\"\"\"\n","    while True:\n","        try:\n","            value = int(input(prompt))\n","            if value < 0:\n","                print(\"Por favor, ingrese un número positivo.\")\n","                continue\n","            return value\n","        except ValueError:\n","            print(\"Entrada no válida. Ingrese un número entero.\")\n","\n","\n","def mostrar_tabla_ventas(ventas: dict):\n","    \"\"\"Muestra una tabla con el ranking de ventas y porcentajes.\"\"\"\n","    total = sum(ventas.values())\n","    print(\"\\n--- 📊 Ranking de Ventas por Producto ---\")\n","    print(\"-\" * 50)\n","\n","    if total == 0:\n","        print(\"No se registraron ventas.\")\n","        return\n","\n","    # Ordenar productos por cantidad vendida (de mayor a menor)\n","    ventas_ordenadas = sorted(ventas.items(), key=lambda x: x[1], reverse=True)\n","\n","    # Encabezados de tabla\n","    print(f\"{'Producto':<15} {'Unidades':>10} {'% del total':>15}\")\n","    print(\"-\" * 50)\n","\n","    # Filas con datos\n","    for producto, cantidad in ventas_ordenadas:\n","        porcentaje = (cantidad / total) * 100\n","        print(f\"{producto.capitalize():<15} {cantidad:>10} {porcentaje:>14.2f}%\")\n","\n","    print(\"-\" * 50)\n","    print(f\"{'TOTAL':<15} {total:>10} {100.00:>14.2f}%\")\n","    print(\"-\" * 50)\n","\n","\n","# --- Ingreso de datos ---\n","productos = [\"manzanas\", \"plátanos\", \"naranjas\", \"uvas\"]  # Puedes agregar más productos\n","ventas = {}\n","\n","print(\"=== Registro de ventas ===\")\n","for producto in productos:\n","    ventas[producto] = get_positive_int(f\"Ingrese el número de {producto} vendidas: \")\n","\n","# --- Resultados ---\n","resultado = producto_mas_vendido(ventas)\n","print(\"\\n\" + resultado)\n","mostrar_tabla_ventas(ventas)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7EnLMBXBn4P8","executionInfo":{"status":"ok","timestamp":1760931698378,"user_tz":300,"elapsed":8611,"user":{"displayName":"Ernesto Quispe Calderón","userId":"16288532978158492958"}},"outputId":"8432b269-bbfb-4aed-efd8-59c909be3d23"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["=== Registro de ventas ===\n","Ingrese el número de manzanas vendidas: 10\n","Ingrese el número de plátanos vendidas: 15\n","Ingrese el número de naranjas vendidas: 20\n","Ingrese el número de uvas vendidas: 23\n","\n","El producto más vendido fue: uvas (23 unidades)\n","\n","--- 📊 Ranking de Ventas por Producto ---\n","--------------------------------------------------\n","Producto          Unidades     % del total\n","--------------------------------------------------\n","Uvas                    23          33.82%\n","Naranjas                20          29.41%\n","Plátanos                15          22.06%\n","Manzanas                10          14.71%\n","--------------------------------------------------\n","TOTAL                   68         100.00%\n","--------------------------------------------------\n"]}]},{"cell_type":"markdown","source":["### BENEFICIOS DE ESTA VERSION\n","| Característica            |Descripción                                                  |\n","| ------------------------- | ------------------------------------------------------------ |\n","| 💡 **Visual profesional** | Muestra los datos en formato tabla alineada.                 |\n","| ⚙️ **Automática**         | Calcula totales y porcentajes sin intervención manual.       |\n","| 🔁 **Escalable**          | Solo debes agregar o quitar nombres de la lista `productos`. |\n","| 🧩 **Modular**            | Las funciones están separadas (limpias y reutilizables).     |\n","| 🛡️ **Segura**            | Valida que el usuario ingrese valores enteros positivos.     |\n"],"metadata":{"id":"qaPtCo8GojA2"}},{"cell_type":"code","source":["# EJERCICIO 2\n","# Lucas trabaja en TI y necesita garantizar que la temperatura de una sala de servidores no supere los 25°C. Quiere un programa que reciba la temperatura actual como entrada y,\n","# si es necesario, muestre un mensaje de alerta.\n","\n","t_actual = float(input('Ingrese la temperatura actual del ambiente: '))\n","if t_actual > 25 :\n","  print('!Alerta! Temperatura por encima del limite permitido.')\n","else:\n","  print('Temperatura dentro del limite permitido.')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zAFS2Nv6x1Zw","executionInfo":{"status":"ok","timestamp":1761084066098,"user_tz":300,"elapsed":2664,"user":{"displayName":"Ernesto Quispe Calderón","userId":"16288532978158492958"}},"outputId":"c6d5d864-b60f-45be-e468-1656830202ee"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Ingrese la temperatura actual del ambiente: 28\n","!Alerta! Temperatura por encima del limite permitido.\n"]}]},{"cell_type":"code","source":["from ast import Try\n","# CODIGO MEJORADO\n","# Programa de control de temperatura en una sala de servidores\n","# Proposito: Monitorear que la temperatura no supere el limite permitido (T°> 25°C)\n","\n","# Constante de limite maximo (°C)\n","t_max = 25.0\n","# Bucle para validar la informacion\n","while True:\n","  try:\n","    t_actual = float(input('Ingrese la temperatura actual del servidor: '))\n","      # Aseguro que Temperatura se encuentre en un rango de valores realistas\n","    if t_actual < 10 or t_actual > 60 :\n","      print('\\u26A0\\uFE0F Valor fuera de rango realista. Intente nuevamente (entre -10°C y 60°C)')\n","      continue\n","    break #Valor valido, salir del bucle\n","  except ValueError:\n","    print('\\u274C Error: Ingrese un valor numerico valido.\\n')\n","\n","# Mostrar el valor ingresado\n","print(f'\\nTemperatura registrada: {t_actual:.1f}°C')\n","# Evaluamos condiciones\n","if t_actual > t_max:\n","  print('\\U0001F6A8 !Alerta! Temperatura por encima del limite permitido.')\n","elif t_actual == t_max :\n","  print('\\u26A0\\uFE0F Temperatura en el limite. Se recomienda monitorear constantemente.')\n","else:\n","  print('\\u2705 Temperatura dentro del rango seguro')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1SkdpYSRwI_z","executionInfo":{"status":"ok","timestamp":1761152338240,"user_tz":300,"elapsed":2916,"user":{"displayName":"Ernesto Quispe Calderón","userId":"16288532978158492958"}},"outputId":"680f5c75-369f-4639-d198-fec5b8666092"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Ingrese la temperatura actual del servidor: 30\n","\n","Temperatura registrada: 30.0°C\n","🚨 !Alerta! Temperatura por encima del limite permitido.\n"]}]}]}